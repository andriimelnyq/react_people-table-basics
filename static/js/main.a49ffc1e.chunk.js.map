{"version":3,"sources":["pages/HomePage.tsx","pages/NotFoundPage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","pages/PeoplePage.tsx","components/PageNavLink.tsx","components/Navbar.tsx","App.tsx","index.tsx"],"names":["HomePage","className","NotFoundPage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","isSelected","name","sex","born","died","slug","fatherName","motherName","father","mother","renderParent","parent","parentName","to","classNames","PeopleTable","people","useParams","map","PeoplePage","useState","persons","setPersons","hasError","setHasError","isLoading","setIsLoading","loadPeople","personsFromServer","findParent","find","useEffect","length","PageNavLink","text","isActive","Navbar","App","role","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.a49ffc1e.chunk.js","sourcesContent":["export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person,\n  isSelected: boolean,\n};\n\nexport const PersonLink = ({ person, isSelected }: Props) => {\n  const {\n    name, sex, born, died,\n    slug, fatherName, motherName, father, mother,\n  } = person;\n\n  const renderParent\n  = (parent: Person | undefined, parentName: string | null) => (\n    parent\n      ? (\n        <NavLink\n          to={`../${parent.slug}`}\n          className={classNames({\n            'has-text-danger': parent.sex === 'f',\n          })}\n        >\n          {parent.name}\n        </NavLink>\n      )\n      : parentName || '-'\n  );\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': isSelected,\n      })}\n    >\n      <td>\n        <NavLink\n          to={`../${slug}`}\n          className={classNames({\n            'has-text-danger': sex === 'f',\n          })}\n        >\n          {name}\n        </NavLink>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>{renderParent(mother, motherName)}</td>\n      <td>{renderParent(father, fatherName)}</td>\n    </tr>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable = ({ people }: Props) => {\n  const { slug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonLink\n            key={person.slug}\n            person={person}\n            isSelected={slug === person.slug}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../api';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { Person } from '../types';\n\nexport const PeoplePage = () => {\n  const [persons, setPersons] = useState<Person[]>([]);\n  const [hasError, setHasError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const loadPeople = async () => {\n    try {\n      setIsLoading(true);\n      const personsFromServer = await getPeople();\n\n      const findParent = (parentName: string | null) => (\n        personsFromServer.find(parent => parent.name === parentName)\n      );\n\n      setPersons(personsFromServer.map(person => ({\n        ...person,\n        mother: findParent(person.motherName),\n        father: findParent(person.fatherName),\n      })));\n    } catch (error) {\n      setHasError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {hasError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {persons.length > 0 && !isLoading && <PeopleTable people={persons} />}\n\n          {persons.length === 0 && !isLoading && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string,\n  text: string,\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    )}\n  >\n    {text}\n  </NavLink>\n);\n","import { PageNavLink } from './PageNavLink';\n\nexport const Navbar = () => (\n  <div className=\"navbar-brand\">\n    <PageNavLink to=\"/\" text=\"Home\" />\n    <PageNavLink to=\"people\" text=\"People\" />\n  </div>\n);\n","import './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <Navbar />\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}